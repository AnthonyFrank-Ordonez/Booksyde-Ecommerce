/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as ContactImport } from './routes/contact'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as ProductsIndexImport } from './routes/products/index'
import { Route as ProductsNovelsIndexImport } from './routes/products/novels/index'
import { Route as ProductsMangaIndexImport } from './routes/products/manga/index'
import { Route as ProductsBooksIndexImport } from './routes/products/books/index'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const ContactRoute = ContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexRoute = ProductsIndexImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsNovelsIndexRoute = ProductsNovelsIndexImport.update({
  id: '/products/novels/',
  path: '/products/novels/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsMangaIndexRoute = ProductsMangaIndexImport.update({
  id: '/products/manga/',
  path: '/products/manga/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsBooksIndexRoute = ProductsBooksIndexImport.update({
  id: '/products/books/',
  path: '/products/books/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/books/': {
      id: '/products/books/'
      path: '/products/books'
      fullPath: '/products/books'
      preLoaderRoute: typeof ProductsBooksIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/manga/': {
      id: '/products/manga/'
      path: '/products/manga'
      fullPath: '/products/manga'
      preLoaderRoute: typeof ProductsMangaIndexImport
      parentRoute: typeof rootRoute
    }
    '/products/novels/': {
      id: '/products/novels/'
      path: '/products/novels'
      fullPath: '/products/novels'
      preLoaderRoute: typeof ProductsNovelsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/products': typeof ProductsIndexRoute
  '/products/books': typeof ProductsBooksIndexRoute
  '/products/manga': typeof ProductsMangaIndexRoute
  '/products/novels': typeof ProductsNovelsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/products': typeof ProductsIndexRoute
  '/products/books': typeof ProductsBooksIndexRoute
  '/products/manga': typeof ProductsMangaIndexRoute
  '/products/novels': typeof ProductsNovelsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/products/': typeof ProductsIndexRoute
  '/products/books/': typeof ProductsBooksIndexRoute
  '/products/manga/': typeof ProductsMangaIndexRoute
  '/products/novels/': typeof ProductsNovelsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/signin'
    | '/signup'
    | '/products'
    | '/products/books'
    | '/products/manga'
    | '/products/novels'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/signin'
    | '/signup'
    | '/products'
    | '/products/books'
    | '/products/manga'
    | '/products/novels'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/signin'
    | '/signup'
    | '/products/'
    | '/products/books/'
    | '/products/manga/'
    | '/products/novels/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  ProductsBooksIndexRoute: typeof ProductsBooksIndexRoute
  ProductsMangaIndexRoute: typeof ProductsMangaIndexRoute
  ProductsNovelsIndexRoute: typeof ProductsNovelsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  ProductsBooksIndexRoute: ProductsBooksIndexRoute,
  ProductsMangaIndexRoute: ProductsMangaIndexRoute,
  ProductsNovelsIndexRoute: ProductsNovelsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/contact",
        "/signin",
        "/signup",
        "/products/",
        "/products/books/",
        "/products/manga/",
        "/products/novels/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/contact": {
      "filePath": "contact.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/products/": {
      "filePath": "products/index.tsx"
    },
    "/products/books/": {
      "filePath": "products/books/index.tsx"
    },
    "/products/manga/": {
      "filePath": "products/manga/index.tsx"
    },
    "/products/novels/": {
      "filePath": "products/novels/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
